generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  RESEPSIONIS
}

model User {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(100)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(255)
  role      Role     @default(RESEPSIONIS)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  guests    Guest[]  @relation("UpdatedBy")
  Log       Log[]
}

model Guest {
  id           String         @id @default(uuid())
  name         String         @db.VarChar(100)
  rsvpCode     String         @unique @db.VarChar(20)
  isAttending  Boolean?       @default(false)
  isPresent    Boolean        @default(false)
  isDeleted    Boolean        @default(false)
  updatedById  String?        @db.VarChar(36)
  updatedAt    DateTime       @updatedAt
  createdAt    DateTime       @default(now())
  isRSVPed     Boolean        @default(false)
  phone        String?        @unique @db.VarChar(15)
  updatedBy    User?          @relation("UpdatedBy", fields: [updatedById], references: [id])
  GuestComment GuestComment[]
  Log          Log[]
}

model GuestComment {
  id        String   @id @default(uuid())
  guest     Guest?   @relation(fields: [guestId], references: [id])
  guestId   String?  @db.VarChar(36)
  message   String?  @db.VarChar(255)
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Log {
  id        String   @id @default(uuid())
  action    String   @db.VarChar(100)
  guestId   String?  @db.VarChar(36)
  guest     Guest?   @relation(fields: [guestId], references: [id])
  userId    String?  @db.VarChar(36)
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
